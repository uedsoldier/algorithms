{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "cmake-configure",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-S",
                "${workspaceFolder}/..",
                "-B",
                "${workspaceFolder}/../build",
                "-DCMAKE_BUILD_TYPE=Debug"
            ],
            "windows": {
                "args": [
                    "-S",
                    "${workspaceFolder}/..",
                    "-B",
                    "${workspaceFolder}/../build",
                    "-G",
                    "MinGW Makefiles",
                    "-DCMAKE_BUILD_TYPE=Debug"
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "cmake-build",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/../build",
                "--config",
                "Debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "cmake-configure"
            ]
        },
        {
            "label": "clean-build",
            "type": "shell",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/../build"
            ],
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "if exist \"${workspaceFolder}\\..\\build\" rmdir /s /q \"${workspaceFolder}\\..\\build\""
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "clean-and-build",
            "dependsOrder": "sequence",
            "dependsOn": [
                "clean-build",
                "cmake-configure",
                "cmake-build"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "create-cmakelist",
            "type": "shell",
            "command": "echo",
            "args": [
                "cmake_minimum_required(VERSION 3.12)",
                "project(algorithms)",
                "add_subdirectory(tests/BASE64)",
                "> ${workspaceFolder}/../CMakeLists.txt"
            ],
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "echo cmake_minimum_required(VERSION 3.12) > \"${workspaceFolder}\\..\\CMakeLists.txt\" && echo project(algorithms) >> \"${workspaceFolder}\\..\\CMakeLists.txt\" && echo add_subdirectory(tests/BASE64) >> \"${workspaceFolder}\\..\\CMakeLists.txt\""
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "setup-and-build",
            "dependsOrder": "sequence",
            "dependsOn": [
                "create-cmakelist",
                "clean-build",
                "cmake-configure",
                "cmake-build"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        }
    ]
}